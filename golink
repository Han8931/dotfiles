#!/bin/sh

#browser="firefox"
#choices="youtube\ngithub\nchatgpt\ngmail"
#chosen=$(echo -e "$choices" | dmenu -i -p "Go to ...")

#case "$chosen" in
#	youtube) $browser https://www.youtube.com/ >/dev/null 2>&1;;
#	github) $browser https://github.com/ >/dev/null 2>&1;;
#	chatgpt) $browser https://chat.openai.com/ >/dev/null 2>&1;;
#	gmail) $browser https://mail.google.com >/dev/null 2>&1;;
#esac

browser="firefox"
# Dynamically create choices from urls.txt, separated by newline characters
# choices=$(awk '{print $1}' urls.txt | tr '\n' '\\' | sed 's/\\$//')
choices=$(awk '{printf "%s\\n", $1}' ~/.dotfiles/urls.txt | sed '$s/\\n$//')

# Use dmenu to present choices to the user. Note: echo -e to interpret backslashes as newline characters.
chosen=$(echo -e "$choices" | dmenu -i -p "Go to ...")


# Ensure chosen is not empty
if [ -z "$chosen" ]; then
  echo "No option was chosen." >&2
  exit 1
fi

# Attempt to extract the URL corresponding to the chosen option
url=$(awk -v chosen="$chosen" '$1 == chosen {print $2}' ~/.dotfiles/urls.txt)

if [ -z "$url" ]; then
    # If no URL was found, prompt the user to add a new one
    echo "No URL found for choice: $chosen"
    new_url=$(dmenu -p "Enter new URL for $chosen:")

    # Check if the user entered a new URL
    if [ -n "$new_url" ]; then
        # Append the new choice and URL to urls.txt
        echo "$chosen $new_url" >> ~/.dotfiles/urls.txt
        url=$new_url
    else
        echo "No URL entered. Exiting."
        exit 1
    fi
fi

# Open the chosen URL in Firefox
$browser "$url" >/dev/null 2>&1
